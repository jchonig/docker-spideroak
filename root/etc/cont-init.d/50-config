#!/usr/bin/with-contenv bash

print_vars () {
    if [ -n "${1}" ]; then
	title=" ${1}"
    else
	title=""
    fi
    echo "Environment${title}:"
    echo "    HOME=${HOME}"
    echo "    PUID=${PUID}"
    echo "    PGID=${PGID}"
    echo "    TZ=${TZ}"
    echo "    SPIDEROAKDATADIR=${SPIDEROAKDATADIR}"
}

print_vars

spideroakone () {
    s6-setuidgid abc /usr/bin/SpiderOakONE ${*}
}

configured () {
    [[ ! "$(spideroakone --userinfo)" =~ 'New User Setup' ]]
}

try_setup () {
    spideroakone --setup=/config/setup.json
}

update_reinstall () {
    jq ".reinstall = '${1}'" /config/setup.json > /config/setup.json.new \
	&& mv /config/setup.json.new /config/setup.json \
	&& chmod 0600 /config/setup.json
}

# permissions
chown -R abc:abc \
	/config
	
if ! configured; then
    if [ -f /config/setup.json ]; then
	echo "Setting configuration from /config/setup.json"
	output=$(try_setup); rc=$?
	if [ ${rc} -ne 0 ]; then
	    if [[ "${output}" =~ 'Device not found:' ]]; then
		echo "Trying setup w/o reinstall"
		update_reinstall "false"
		try_setup && update_reinstall "true"
	    fi
	fi
    fi
fi

if configured; then
    if [ -f /config/volumes ]; then
	echo "Reseting selections"
	spideroakone --reset-selection
	echo "Updating selections"
	while IFS= read -r type path; do
	    echo "	${type}	${path}"
	    case ${type} in
		include-dir)
		    if [ ! -d "${path}" ]; then
			echo "Volume ${path} is not mounted"
			continue
		    fi
		    spideroakone --${type}="${path}"
		    ;;
		include-file)
		    if [ ! -f "${path}" ]; then
			echo "File ${path} is not mounted"
			continue
		    fi
		    spideroakone --${type}="${path}"
		    ;;
		exclude-*|purge)
		    spideroakone --${type}="${path}"
		    ;;
	    esac
	done < /config/volumes
    fi
fi
